<UserControl x:Class="Manager.Views.Rounds.RoundDetailsView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:command="http://www.galasoft.ch/mvvmlight"
			 xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
			 xmlns:converters="clr-namespace:Manager.Converters"
			 xmlns:properties="clr-namespace:Manager.Properties"
			 mc:Ignorable="d"
			 d:DesignHeight="720"
			 d:DesignWidth="1280"
			 DataContext="{Binding RoundDetails, Source={StaticResource Locator}}">

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/CSGODemosManager;component/resources/timelines/Round.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<converters:SideToStringConverter x:Key="SideToStringConverter" />
			<converters:RoundEndReasonToStringConverter x:Key="RoundEndReasonToStringConverter" />
			<converters:RoundTypeToStringConverter x:Key="RoundTypeToStringConverter" />
		</ResourceDictionary>
	</UserControl.Resources>

	<UserControl.InputBindings>
		<KeyBinding Command="{Binding BackToDemoDetailsCommand}"
					CommandParameter="{Binding Demo}"
					Gesture="CTRL+B" />
		<KeyBinding Command="{Binding WatchRoundCommand}"
					Gesture="CTRL+W" />
	</UserControl.InputBindings>

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<command:EventToCommand Command="{Binding WindowLoaded, Mode=OneWay}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<Grid Grid.Row="0"
			  Height="40">
			<StackPanel Orientation="Horizontal">
				<Button Style="{DynamicResource GeneralButton}"
						ToolTip="{x:Static properties:Resources.ToolTipBack}"
						Command="{Binding BackToDemoDetailsCommand}"
						CommandParameter="{Binding Demo}">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15"
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_arrow_left}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
						<TextBlock Text="{x:Static properties:Resources.Back}"
								   Style="{StaticResource ButtonTitleStyle}" />
					</StackPanel>
				</Button>

				<Button Style="{DynamicResource GeneralButton}"
						ToolTip="{x:Static properties:Resources.ToolTipWatchRound}"
						Command="{Binding WatchRoundCommand}">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15"
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_control_play}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
						<TextBlock Text="{x:Static properties:Resources.Watch}"
								   Style="{StaticResource ButtonTitleStyle}" />
					</StackPanel>
				</Button>
			</StackPanel>

			<Grid HorizontalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Button Grid.Column="0"
						Style="{DynamicResource GeneralButton}"
						Command="{Binding GoToPreviousRoundCommand}"
						ToolTip="{x:Static properties:Resources.ToolTipPreviousRound}">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15"
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_arrow_left}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
					</StackPanel>
				</Button>
				<TextBlock Grid.Column="1"
						   Style="{StaticResource BigTitleStyle}">
					<TextBlock.Text>
						<MultiBinding StringFormat="{}{0} #{1}">
							<Binding Source="{x:Static properties:Resources.Round}"/>
							<Binding Path="CurrentRound.Number"/>
						</MultiBinding>
					</TextBlock.Text>
				</TextBlock>
				<Button Grid.Column="2"
						Style="{DynamicResource GeneralButton}"
						Command="{Binding GoToNextRoundCommand}"
						ToolTip="{x:Static properties:Resources.ToolTipNextRound}">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15"
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_arrow_right}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
					</StackPanel>
				</Button>
			</Grid>
		</Grid>

		<Grid Grid.Row="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>

			<Grid Grid.Row="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<StackPanel Orientation="Vertical"
							Grid.Column="0"
							Margin="10 0 5 0">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.WinnerTeamName}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.WinnerName, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.LabelWinnerSide}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.WinnerSide, Converter={StaticResource SideToStringConverter}, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.Reason}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.EndReason, Converter={StaticResource RoundEndReasonToStringConverter}, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}">
							<Run Text="{x:Static properties:Resources.StartMoney}" />
							<Run Text="{Binding CurrentRound.TeamCtName}" />
						</TextBlock>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.StartMoneyTeamCt, StringFormat='{} {0}$'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}">
							<Run Text="{x:Static properties:Resources.StartMoney}" />
							<Run Text="{Binding CurrentRound.TeamTname}" />
						</TextBlock>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.StartMoneyTeamT, StringFormat='{} {0}$'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.Type}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.Type, Converter={StaticResource RoundTypeToStringConverter}, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.BombPlanted}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.BombPlantedCount, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.BombExploded}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.BombExplodedCount, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.BombDefused}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.BombDefusedCount, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.Flashbangs}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.FlashbangThrownCount, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.Smoke}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.SmokeThrownCount, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.HeGrenades}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.HeGrenadeThrownCount, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.Molotovs}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.MolotovThrownCount, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.Incendiaries}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.IncendiaryThrownCount, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{x:Static properties:Resources.Decoys}"
								   Grid.Column="0"
								   Style="{StaticResource TextBlockHighlight}"/>
						<TextBlock Grid.Column="1"
								   Text="{Binding CurrentRound.DecoyThrownCount, StringFormat='{} {0}'}"
								   Style="{StaticResource TextBlockStandard}"/>
					</Grid>
				</StackPanel>

				<Grid Grid.Column="1">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<TextBlock Grid.Row="0"
							   Text="{x:Static properties:Resources.Kills}"
							   Style="{StaticResource TitleSettingsStyle}"
							   HorizontalAlignment="Center"/>
					<DataGrid Grid.Row="1"
							  Margin="0 0 5 0"
							  x:Name="KillsDataGrid"
							  ItemsSource="{Binding CurrentRound.Kills, IsAsync=True}"
							  SelectedItem="{Binding SelectedKill}"
							  Style="{StaticResource DataGridStyle}">
						<DataGrid.Columns>
							<DataGridTextColumn HeaderStyle="{StaticResource TickHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.Tick}"
												Binding="{Binding Tick}" />
							<DataGridTextColumn HeaderStyle="{StaticResource KillerNameHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderKiller}"
												Binding="{Binding KillerName}" />
							<DataGridTextColumn HeaderStyle="{StaticResource KilledNameHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderVictim}"
												Binding="{Binding KilledName}" />
							<DataGridTextColumn HeaderStyle="{StaticResource AssisterNameHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderAssister}"
												Binding="{Binding AssisterName}" />
							<DataGridTextColumn HeaderStyle="{StaticResource WeaponNameHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderWeapon}"
												Binding="{Binding Weapon.Name}" />
							<DataGridTemplateColumn Header="{x:Static properties:Resources.Watch}">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Button Command="{Binding Source={StaticResource Locator}, Path=RoundDetails.WatchKillCommand}"
												CommandParameter="{Binding SelectedItem, ElementName=KillsDataGrid}"
												Style="{DynamicResource AccentedSquareButtonStyle}"
												Content="{x:Static properties:Resources.Watch}"/>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
				<Grid Grid.Column="2">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<TextBlock Grid.Row="0"
							   Text="{x:Static properties:Resources.Players}"
							   Style="{StaticResource TitleSettingsStyle}"
							   HorizontalAlignment="Center"/>
					<DataGrid Grid.Row="1"
							  Margin="0 0 5 0"
							  x:Name="PlayersDataGrid"
							  ItemsSource="{Binding PlayersStats, IsAsync=True}"
							  Style="{StaticResource DataGridStyle}">
						<DataGrid.Columns>
							<DataGridTextColumn HeaderStyle="{StaticResource PlayerNameHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.Name}"
												Binding="{Binding Name}" />
							<DataGridTextColumn HeaderStyle="{StaticResource KillsHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderKills}"
												Binding="{Binding KillCount}" />
							<DataGridTextColumn HeaderStyle="{StaticResource JumpKillsHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderJumpKills}"
												Binding="{Binding JumpKillCount}" />
							<DataGridTextColumn HeaderStyle="{StaticResource ShotsHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderShots}"
												Binding="{Binding ShotCount}" />
							<DataGridTextColumn HeaderStyle="{StaticResource HitsHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderHits}"
												Binding="{Binding HitCount}" />
							<DataGridTextColumn HeaderStyle="{StaticResource TotalDamageHealthHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderTotalDamagesHealth}"
												Binding="{Binding DamageHealthCount}" />
							<DataGridTextColumn HeaderStyle="{StaticResource TotalDamageArmorHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderTotalDamagesArmor}"
												Binding="{Binding DamageArmorCount}" />
							<DataGridTextColumn HeaderStyle="{StaticResource StartMoneyHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderStartMoneyPlayer}"
												Binding="{Binding StartMoneyValue}" />
							<DataGridTextColumn HeaderStyle="{StaticResource EquipementValueHeader}"
												Width="Auto"
												Header="{x:Static properties:Resources.HeaderEquipmentValuePlayer}"
												Binding="{Binding EquipementValue}" />
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</Grid>


			<Grid Grid.Row="1">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<TextBlock Grid.Row="0"
						   Text="{x:Static properties:Resources.Timeline}"
						   Style="{StaticResource TitleSettingsStyle}"
						   HorizontalAlignment="Center"/>
				<Border Grid.Row="1"
						Margin="1"
						BorderThickness="2 0 2 2"
						BorderBrush="{StaticResource HighlightBrush}">
					<telerik:RadTimeline BorderThickness="0"
										 PeriodStart="{Binding PeriodStart}"
										 PeriodEnd="{Binding PeriodEnd}"
										 VisiblePeriodStart="{Binding VisibleStartTime}"
										 VisiblePeriodEnd="{Binding VisibleEndTime}"
										 IsSelectionEnabled="True"
										 SelectionMode="Single"
										 StartPath="StartTime"
										 DurationPath="Duration"
										 GroupPath="Category"
										 ScrollMode="ScrollAndZoom"
										 GroupExpandMode="Multiple"
										 VerticalScrollBarVisibility="Auto"
										 SliderStyle="{StaticResource TimeLineSliderStyle}"
										 ToolTipTemplate="{StaticResource RoundToolTipTemplate}"
										 ItemTemplateSelector="{StaticResource RoundTemplateSelector}"
										 ItemsSource="{Binding RoundEventList}">
						<telerik:RadTimeline.Intervals>
							<telerik:SecondInterval IntervalSpans="10"
													FormatterProvider="{StaticResource CustomSecondsFormatter}" />
						</telerik:RadTimeline.Intervals>
					</telerik:RadTimeline>
				</Border>
			</Grid>
		</Grid>
	</Grid>
</UserControl>
