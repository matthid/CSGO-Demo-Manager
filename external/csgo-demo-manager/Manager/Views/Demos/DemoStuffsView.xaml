<UserControl x:Class="Manager.Views.Demos.DemoStuffsView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:command="http://www.galasoft.ch/mvvmlight"
			 xmlns:converters="clr-namespace:Manager.Converters"
			 xmlns:mouse="clr-namespace:Manager.Internals.Mouse"
			 xmlns:properties="clr-namespace:Manager.Properties"
			 mc:Ignorable="d"
			 d:DesignHeight="720"
			 d:DesignWidth="1280"
			 DataContext="{Binding DemoStuffs, Source={StaticResource Locator}}">

	<UserControl.Resources>
		<ResourceDictionary>
			<converters:FlashbangStuffTypeToVisibilityConverter x:Key="FlashbangStuffTypeToVisibilityConverter" />
			<converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
			<converters:StuffTypeToStringConverter x:Key="StuffTypeToStringConverter" />
		</ResourceDictionary>
	</UserControl.Resources>
	<UserControl.InputBindings>
		<KeyBinding Command="{Binding BackToDemoDetailsCommand}"
					CommandParameter="{Binding Demo}"
					Gesture="CTRL+B" />
		<mouse:MouseBindingExtended Gesture="XButton1"
									Command="{Binding BackToDemoDetailsCommand}"
									CommandParameter="{Binding Demo}" />
		<KeyBinding Command="{Binding WatchPlayerStuffCommand}"
					Gesture="CTRL+W" />
	</UserControl.InputBindings>

	<Grid>
		<i:Interaction.Triggers>
			<i:EventTrigger EventName="Loaded">
				<command:EventToCommand Command="{Binding WindowLoaded, Mode=OneWay}" />
			</i:EventTrigger>
		</i:Interaction.Triggers>
		
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<Grid Grid.Row="0"
			  Height="40">
			<StackPanel Orientation="Horizontal">
				<Button Style="{DynamicResource GeneralButton}"
						Command="{Binding BackToDemoDetailsCommand}"
						CommandParameter="{Binding Demo}"
						ToolTip="{x:Static properties:Resources.ToolTipBack}">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15"
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_arrow_left}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
						<TextBlock Text="{x:Static properties:Resources.Back}"
								   Style="{StaticResource ButtonTitleStyle}" />
					</StackPanel>
				</Button>

				<ComboBox ItemsSource="{Binding StuffSelectors}"
						  SelectedItem="{Binding CurrentStuffSelector}"
						  DisplayMemberPath ="Title"
						  SelectedValuePath="Title"
						  Margin="5">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="SelectionChanged">
							<i:InvokeCommandAction Command="{Binding StuffTypeChangedCommand}" />
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</ComboBox>

				<ComboBox ItemsSource="{Binding Demo.Players}"
						  SelectedItem="{Binding SelectedPlayer}"
						  DisplayMemberPath ="Name"
						  SelectedValuePath="Name"
						  Margin="5"
						  controls:TextBoxHelper.Watermark="{x:Static properties:Resources.Player}"/>
				
				<Button Command="{Binding WatchPlayerStuffCommand}"
						Style="{DynamicResource GeneralButton}"
						ToolTip="{x:Static properties:Resources.ToolTipWatchAllStuffsFromPlayer}">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15" 
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_control_play}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
						<TextBlock Text="{x:Static properties:Resources.WatchPlayerStuffs}"
								   Style="{StaticResource ButtonTitleStyle}" />
					</StackPanel>
				</Button>

				<Button Style="{DynamicResource GeneralButton}"
						Command="{Binding CopySetPosCommand}"
						ToolTip="{x:Static properties:Resources.ToolTipCopySetposCommand}">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15"
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_location_round}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
						<TextBlock Text="{x:Static properties:Resources.CopySetpos}"
								   Style="{StaticResource ButtonTitleStyle}" />
					</StackPanel>
				</Button>

				<StackPanel Orientation="Horizontal"
							HorizontalAlignment="Center"
							Margin="5">
					<controls:ProgressRing IsActive="{Binding IsBusy}"
										   Foreground="{DynamicResource BlackColorBrush}"
										   Width="30"
										   Height="30" />
					<TextBlock Text="{Binding Notification}"
							   Style="{StaticResource NotificationMessageStyle}"
							   Visibility="{Binding HasNotification, Converter={StaticResource BooleanToVisibilityConverter}}"/>
				</StackPanel>
			</StackPanel>
		</Grid>

		<Grid Grid.Row="1"
			  Margin="10"
			  HorizontalAlignment="Center">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>

			<Grid Grid.Column="0">
				<DataGrid x:Name="StuffDataGrid"
						  Style="{StaticResource DataGridStyle}"
						  ItemsSource="{Binding Stuffs}"
						  SelectionMode="Single"
						  ClipboardCopyMode="ExcludeHeader"
						  SelectionUnit="Cell">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="CopyingRowClipboardContent">
							<command:EventToCommand Command="{Binding CopyCellContent}"
													PassEventArgsToCommand="True" />
						</i:EventTrigger>
						<i:EventTrigger EventName="SelectedCellsChanged">
							<command:EventToCommand Command="{Binding SelectedCellChanged}"
													PassEventArgsToCommand="True" />
						</i:EventTrigger>
					</i:Interaction.Triggers>
					
					<DataGrid.Columns>
						<DataGridTextColumn HeaderStyle="{StaticResource TypeHeader}"
											Width="Auto"
											Header="{x:Static properties:Resources.Type}"
											Binding="{Binding Type, Converter={StaticResource StuffTypeToStringConverter}}" />
						<DataGridTextColumn HeaderStyle="{StaticResource TickHeader}"
											Width="Auto"
											Header="{x:Static properties:Resources.Tick}"
											Binding="{Binding Tick}" />
						<DataGridTextColumn HeaderStyle="{StaticResource RoundNumberHeader}"
											Width="Auto"
											Header="{x:Static properties:Resources.Round}"
											Binding="{Binding RoundNumber}" />
						<DataGridTextColumn HeaderStyle="{StaticResource SecondsRoundStuffRoundHeader}"
											Width="Auto"
											Header="{x:Static properties:Resources.SecondsRound}"
											IsReadOnly="True"
											Binding="{Binding RoundSeconds}" />
						<DataGridTextColumn HeaderStyle="{StaticResource SecondsDemoStuffRoundHeader}"
											Width="Auto"
											Header="{x:Static properties:Resources.SecondsDemo}"
											IsReadOnly="True"
											Binding="{Binding DemoSeconds}" />
						<DataGridTextColumn HeaderStyle="{StaticResource ThrowerNameHeader}"
											Width="Auto"
											Header="{x:Static properties:Resources.HeaderThrower}"
											Binding="{Binding ThrowerName}" />
						<DataGridTemplateColumn Header="{x:Static properties:Resources.Watch}">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<Button Command="{Binding Source={StaticResource Locator}, Path=DemoStuffs.WatchStuff}"
											Style="{DynamicResource AccentedSquareButtonStyle}"
											Content="{x:Static properties:Resources.Watch}" />
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
					</DataGrid.Columns>
				</DataGrid>
			</Grid>

			<Grid Grid.Column="1">
				<Image Source="{Binding OverviewLayer}"
					   Style="{StaticResource OverviewLayerStyle}"/>
				<Image Source="{Binding StuffLayer}"
					   Style="{StaticResource OverviewLayerStyle}"/>
			</Grid>

			<Grid Grid.Column="2"
				  Visibility="{Binding CurrentStuffSelector.Id, Converter={StaticResource FlashbangStuffTypeToVisibilityConverter}}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				
				<TextBlock Grid.Row="0"
						   Text="{x:Static properties:Resources.FlashedPlayers}"
						   Style="{StaticResource TextBlockStandard}"/>
				<DataGrid Grid.Row="1"
						  ItemsSource="{Binding SelectedStuff.FlashedPlayers}"
						  Style="{StaticResource DataGridStyle}">
					<DataGrid.Columns>
						<DataGridTextColumn HeaderStyle="{StaticResource PlayerNameHeader}"
											Width="Auto"
											Header="{x:Static properties:Resources.Name}"
											Binding="{Binding Name}" />
					</DataGrid.Columns>
				</DataGrid>
			</Grid>
		</Grid>
	</Grid>
</UserControl>
